from django.urls import path, include, re_path
from django.views.generic import RedirectView
from fastrax.views import *
from django.contrib.auth.decorators import login_required, permission_required

urlpatterns = [
    path('', index, name='index'),
    path('search/', search),
    path('upcoming/', upcoming),
    path('register/', register),
    path('smokeregister/', (ListSmokeRegister.as_view()), name='list_smokeregister'),
    path('smokeregister/create/', permission_required('fastrax.add_smokeregister')(CreateSmokeRegister.as_view()), name='create_smokeregister'),
    re_path(r'^smokeregister/(?P<sn>\w{12})/$', (DetailSmokeRegister.as_view()), name='detail_smokeregister'),
    re_path(r'^smokeregister/(?P<sn>\w{12})/edit/$', permission_required('fastrax.add_smokeregister')(UpdateSmokeRegister.as_view()), name='update_smokeregister'),
    re_path(r'^smokeregister/(?P<sn>\w{12})/delete/$', permission_required('fastrax.delete_smokeregister')(DeleteSmokeRegister.as_view()), name='delete_smokeregister'),
    #url(r'^smokeregister/district/(?P<tla>\w+)/(?P<slug>\D+)/closed/$', (DistrictListSmokeRegisterClosed.as_view()), name='district_list_smokeregister_closed'),
    re_path(r'^smokeregister/district/(?P<tla>\w+)/(?P<slug>\D+)/$', (DistrictListSmokeRegister.as_view()), name='district_list_smokeregister'),
    path('plusfour/', (ListPlusFour.as_view()), name='list_plusfour'),
    path('plusfour/create/', permission_required('fastrax.add_plusfour')(CreatePlusFour.as_view()), name='create_plusfour'),
    re_path(r'^plusfour/(?P<pk>\d+)/$', (PrintPlusFour.as_view()), name='print_plusfour'),
    re_path(r'^plusfour/(?P<pk>\d+)/edit/$', permission_required('fastrax.add_plusfour')(UpdatePlusFour.as_view()), name='update_plusfour'),
    re_path(r'^plusfour/(?P<pk>\d+)/delete/$', permission_required('fastrax.delete_plusfour')(DeletePlusFour.as_view()), name='delete_plusfour'),
    re_path(r'^plusfour/(?P<pk>\d+)/status/$', permission_required('fastrax.delete_plusfour')(StatusPlusFour.as_view()), name='status_plusfour'),
    re_path(r'^(?P<sn>\w{12})/alt/$', snalt),
    re_path(r'^(?P<sn>\w{12})/$', sn),
    re_path(r'^(?P<sn>\w{12})/edit/$', snedit),
    re_path(r'^(?P<sn>\w{12})/dyn/$', sndyn),
    re_path(r'^(?P<sn>\w{12})/registerlike/$', snregisterlike),
    path('plan/', plan),
    re_path(r'^(?P<sn>\w{12})/plan/$', snplan),
    re_path(r'^(?P<sn>\w{12})/plan2/$', snplan2),
    re_path(r'^(?P<sn>\w{12})/(?P<pn>\d{2})/alt/$', snpnalt),
    re_path(r'^(?P<sn>\w{12})/(?P<pn>\d{2})/$', snpn),
    #(r'^result/$', 'result'),
    re_path(r'^(?P<sn>\w{12})/(?P<pn>\d{2})/result/$', snpnresult),
    re_path(r'^(?P<sn>\w{12})/(?P<pn>\d{2})/result1/$', snpnresult1),
    re_path(r'^(?P<sn>\w{12})/(?P<pn>\d{2})/noresult/$', snpnnoresult),
    path('odf/district/', odfdistrict),
    re_path(r'^odf/REGISTERDATETIME(?P<year>\d{4})(?P<mo>\d{2})(?P<da>\d{2})(?P<hr>\d{2})(?P<mi>\d{2}).txt$', odfamtxt),
    re_path(r'^odf/REGISTERDATETIME(?P<year>\d{4})(?P<mo>\d{2})(?P<da>\d{2}).txt$', odfdatetxt),
    re_path(r'^odf/REGISTERDATETIME(?P<year>\d{4})(?P<mo>\d{2}).txt$', odfmotxt),
    re_path(r'^odf/REGISTERDATETIME(?P<year>\d{4}).txt$', odfyrtxt),
    re_path(r'^odf/REGISTERDATETIME(?P<year>\d{4})(?P<mo>\d{2})(?P<da>\d{2}).json$', odfjson),
    re_path(r'^odf/REGISTERDATETIME(?P<year>\d{4})(?P<mo>\d{2}).json$', odfjson),
    re_path(r'^odf/REGISTERDATETIME(?P<year>\d{4}).json$', odfjson),
    path('odf/daily.json', odfjsondaily),
    re_path(r'^odf/(?P<year>\d{4})/(?P<mo>\d{2})/(?P<da>\d{2})/$', odfdate),
    re_path(r'^odf/(?P<year>\d{4})/(?P<mo>\d{2})/$', odfmonth),
    re_path(r'^odf/(?P<year>\d{4})/$', odfyear),
    re_path(r'^annotated/odf/(?P<year>\d{4})/(?P<mo>\d{2})/(?P<da>\d{2})/$', odfandate),
    re_path(r'^annotated/odf/(?P<year>\d{4})/(?P<mo>\d{2})/$', odfanmonth),
    re_path(r'^annotated/odf/(?P<year>\d{4})/$', odfanyear),
    re_path(r'^(?P<year>\d{4})/(?P<mo>\d{2})/(?P<da>\d{2})/ignition/$', date_ignition),
    re_path(r'^(?P<year>\d{4})/(?P<mo>\d{2})/(?P<da>\d{2})/map/$', datemap),
    re_path(r'^(?P<year>\d{4})/(?P<mo>\d{2})/(?P<da>\d{2})/$', date),
    re_path(r'^(?P<year>\d{4})/(?P<mo>\d{2})/(?P<da>\d{2})/(?P<hr>\d{2})(?P<mi>\d{2})/map/$', dateammap),
    re_path(r'^(?P<year>\d{4})/(?P<mo>\d{2})/(?P<da>\d{2})/(?P<hr>\d{2})(?P<mi>\d{2})/$', dateam),
    re_path(r'^(?P<year>\d{4})/(?P<mo>\d{2})/$', month),
    re_path(r'^(?P<year>\d{4})/(?P<mo>\d{2})/map/$', monthmap),
    re_path(r'^(?P<year>\d{4})/$', year),
    re_path(r'^(?P<year>\d{4})/problems/$', yearproblems),
    re_path(r'^(?P<year>\d{4})/overage/$', yearoverage),
    #re_path(r'^(?P<year>\d{4})/billing/$', yearbilling),
    re_path(r'^(?P<year>\d{4})/billing/(?P<tn>\w+)/$', yearbilling),
    re_path(r'^(?P<year>\d{4})/map/$', yearmap),
    re_path(r'^(?P<year>\d{4})/(?P<mo>\d{2})/sum/$', monthsum),
    re_path(r'^(?P<year>\d{4})/sum/$', yearsum),
    re_path(r'^(?P<year>\d{4})/(?P<mo>\d{2})/accomp/$', monthaccomp),
    re_path(r'^accomp/accomp-(?P<year>\d{4})-(?P<mo>\d{2}).csv$', monthaccompt),
#    (r'^(?P<year>\d{4})/accomp/$', 'yearaccomp'),
    re_path(r'^(?P<year>\d{4})/accomp/$', fiscalaccomp),
    re_path(r'^accomp/accomp-(?P<year>\d{4})-fiscal.csv$', fiscalaccompt),
    path('user/', users),
    re_path(r'^user/(?P<un>[\w@\.]+)/$', user),
    re_path(r'^user/(?P<un>[\w@\.]+)/closed/$', uclosed),
    re_path(r'^user/(?P<un>[\w@\.]+)/sum/$', usersum),
    path('control/', control),
    path('district/', districts),
    re_path(r'^district/(?P<tn>\w+)/$', tla),
    re_path(r'^district/(?P<tn>\w+)/map/$', tlamap),
    re_path(r'^district/(?P<tn>\w+)/closed/$', tclosed),
    re_path(r'^district/(?P<tn>\w+)/(?P<dn>\D+)/register/$', tndnregister),
    re_path(r'^district/(?P<tn>\w+)/(?P<dn>\D+)/register2/$', tndnregister2),
    re_path(r'^district/(?P<tn>\w+)/(?P<dn>\D+)/register1/$', tndnregister1),
    re_path(r'^district/(?P<tn>\w+)/(?P<dn>\D+)/closed/$', dclosed),
    re_path(r'^district/(?P<tn>\w+)/(?P<dn>\D+)/map/$', distmap),
    re_path(r'^district/(?P<tn>\w+)/(?P<dn>\D+)/test/$', test),
    re_path(r'^district/(?P<tn>\w+)/(?P<dn>\D+)/$', district),
    #path('transfer/', transfer),
]